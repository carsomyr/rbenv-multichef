#!/usr/bin/env bash
#
# Copyright 2014 Roy Liu
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# A script for interacting with the plugin.

set -e

# The script may be a symlink created by Homebrew.
script_path=$(readlink -- "$0" || true)

if [[ -z "$script_path" ]]; then
    script_path=$0
else
    # Is it a (relative) symlink? Change to its parent directory.
    script_path="$(cd -- $(dirname -- "$0") && cd -- "$(dirname -- "$script_path")" && pwd)"\
"/$(basename -- "$script_path")"
fi

source -- "$(dirname -- "$(dirname -- "$script_path")")/etc/rbenv.d/multichef/includes.sh"

case "$1" in
    local|global)
        if { ! config_dir=$(absolute_path "${RBENV_MULTICHEF_ROOT}/configs/${2}"); }; then
            exit -- 1
        fi

        if [[ ! -d "$config_dir" ]]; then
            echo "rbenv-multichef: the config directory \`${config_dir}\` doesn't exist" >&2
            exit -- 1
        fi

        if [[ "$1" == "local" ]]; then
            echo "$2" > "$(pwd)/.multichef-config"
        else
            echo "$2" > "${RBENV_MULTICHEF_ROOT}/config"
        fi
        ;;

    link)
        config_name=$2

        if { ! config_dir=$(absolute_path "$3"); }; then
            exit -- 1
        fi

        if [[ -z "$config_name" ]]; then
            echo "rbenv-multichef: please provide a config name" >&2
            exit -- 1
        fi

        if [[ ! -d "${RBENV_MULTICHEF_ROOT}/configs" ]]; then
            mkdir -p -- "${RBENV_MULTICHEF_ROOT}/configs"
        fi

        ln -sfn -- "$config_dir" "${RBENV_MULTICHEF_ROOT}/configs/${config_name}"
        ;;

    config)
        if { config_file=$(multichef_config_file "$(pwd)"); }; then
            config_name=$(cat -- "$config_file")
            config_dir="${RBENV_MULTICHEF_ROOT}/configs/${config_name}"
        else
            config_file="${RBENV_MULTICHEF_ROOT}/config"
            config_name="system"
            config_dir=""
        fi

        message="$config_name"
        message="${message} (set by \`${config_file}\`"

        if [[ -n "$config_dir" ]]; then
            message="${message}, using \`$(absolute_path "$config_dir")\`"
        fi

        message="${message})"

        echo "$message"
        ;;

    *)
        cat >&2 <<EOF
usage: rbenv multichef [local | global] <config name>
   or: rbenv multichef link <config dir> <config name>
   or: rbenv multichef config
EOF
        exit -- 1
        ;;
esac
