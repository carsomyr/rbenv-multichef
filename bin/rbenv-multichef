#!/usr/bin/env bash
#
# Copyright 2014 Roy Liu
#
# Licensed under the Apache License, Version 2.0 (the "License"); you may not
# use this file except in compliance with the License. You may obtain a copy of
# the License at
#
#     http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS, WITHOUT
# WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied. See the
# License for the specific language governing permissions and limitations under
# the License.

# A script for interacting with the plugin.

set -e

# The script may be a symlink created by Homebrew.
script_path=$(readlink -- "$0" || true)

if [[ -z "$script_path" ]]; then
    script_path=$0
else
    # Is it a (relative) symlink? Change to its parent directory.
    script_path="$(cd -- $(dirname -- "$0") && cd -- "$(dirname -- "$script_path")" && pwd)"\
"/$(basename -- "$script_path")"
fi

source -- "$(dirname -- "$(dirname -- "$script_path")")/etc/rbenv.d/multichef/includes.sh"

# Magic comment to enable completions:
#
# provide rbenv completions

case "$1" in
    local|global)
        config_name=$2

        if (( $# != 2 )) || [[ -z "$config_name" ]]; then
            usage_message;
            exit -- 1
        fi

        if { ! config_dir=$(absolute_path "${RBENV_MULTICHEF_ROOT}/configs/${2}"); }; then
            exit -- 1
        fi

        if [[ ! -d "$config_dir" ]]; then
            echo "rbenv-multichef: the config directory \`${config_dir}\` doesn't exist" >&2
            exit -- 1
        fi

        if [[ "$1" == "local" ]]; then
            echo "$2" > "$(pwd)/.multichef-config"
        else
            echo "$2" > "${RBENV_MULTICHEF_ROOT}/config"
        fi
        ;;

    link)
        config_name=$2
        config_dir=$3

        if (( $# != 3 )) || [[ -z "$config_name" ]] || [[ -z "$config_dir" ]]; then
            usage_message;
            exit -- 1
        fi

        if { ! config_dir=$(absolute_path "$config_dir"); }; then
            exit -- 1
        fi

        if [[ ! -d "$config_dir" ]]; then
            echo "rbenv-multichef: the config directory \`${config_dir}\` doesn't exist" >&2
            exit -- 1
        fi

        if [[ ! -d "${RBENV_MULTICHEF_ROOT}/configs" ]]; then
            mkdir -p -- "${RBENV_MULTICHEF_ROOT}/configs"
        fi

        ln -sfn -- "$config_dir" "${RBENV_MULTICHEF_ROOT}/configs/${config_name}"
        ;;

    config|configs)
        if (( $# != 1 )); then
            usage_message;
            exit -- 1
        fi

        if { config_file=$(multichef_config_file "$(pwd)"); }; then
            config_name=$(cat -- "$config_file")
            config_dir="${RBENV_MULTICHEF_ROOT}/configs/${config_name}"
        else
            config_file="${RBENV_MULTICHEF_ROOT}/config"
            config_name="system"
            config_dir=""
        fi

        if [[ "$1" == "config" ]]; then
            configs=("$config_name")
        else
            IFS=$'\n' declare -a -- "configs=(\$(ls -- \"\${RBENV_MULTICHEF_ROOT}/configs\"))"
            configs=("system" "${configs[@]}")
        fi

        for config in "${configs[@]}"; do
            if [[ "$config" != "$config_name" ]]; then
                echo "$config"
            else
                config_message "$config_name" "$config_file" "$config_dir"
            fi
        done
        ;;

    --complete)
        shift -- 1

        case "$1" in
            local|global)
                ls -- "${RBENV_MULTICHEF_ROOT}/configs/${config_name}"
                ;;

            "")
                cat <<EOF
local
global
link
config
EOF
                ;;
        esac
        ;;

    *)
        usage_message;
        exit -- 1
        ;;
esac
